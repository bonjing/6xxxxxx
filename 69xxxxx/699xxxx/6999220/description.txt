Book Description
Master C++ â€œThe Qt Wayâ€ with Modern Design Patterns and Efficient Reuse

This fully updated, classroom-tested book teaches C++ â€œThe Qt Way,â€ emphasizing design patterns and efficient reuse. Readers will master both the C++ language and Qt libraries, as they learn to develop maintainable software with well-defined code layers and simple, reusable classes and functions.

Every chapter of this edition has been improved with new content, better organization, or both. Readers will find extensively revised coverage of QObjects, Reflection, Widgets, Main Windows, Models and Views, Databases, Multi-Threaded Programming, and Reflection. This edition introduces the powerful new Qt Creator IDE; presents new multimedia APIs; and offers extended coverage of Qt Designer and C++ Integration. It has been restructured to help readers start writing software immediately and write robust, effective software sooner.

The authors introduce several new design patterns, add many quiz questions and labs, and present more efficient solutions relying on new Qt features and best practices. They also provide an up-to-date C++ reference section and a complete application case study.

Master C++ keywords, literals, identifiers, declarations, types, and type conversions.
Understand classes and objects, organize them, and describe their interrelationships.
Learn consistent programming style and naming rules.
Use lists, functions, and other essential techniques.
Define inheritance relationships to share code and promote reuse.
Learn how code libraries are designed, built, and reused.
Work with QObject, the base class underlying much of Qt.
Build graphical user interfaces with Qt widgets.
Use templates to write generic functions and classes.
Master advanced reflective programming techniques.
Use the Model-View framework to cleanly separate data and GUI classes.
Validate input using regular expressions and other techniques.
Parse XML data with SAX, DOM, and QXmlStreamReader.
Master todayâ€™s most valuable creational and structural design patterns.
Create, use, monitor, and debug processes and threads.
Access databases with Qtâ€™s SQL classes.
Manage memory reliably and efficiently.
Understand how to effectively manage QThreads and use QtConcurrent algorithms.
Book Details
Hardcover: 768 pages
Publisher: Prentice Hall; 2nd Edition (September 2011)
Language: English
ISBN-10: 0132826453
ISBN-13: 978-0132826457