Eric T Freeman and Elisabeth Robson, "Head First HTML5 Programming: Building Web Apps with JavaScript"
O'Reilly Media | 2011 | ISBN: 1449390544 | 608 pages | PDF

HTML has been on a wild ride. Sure, HTML started as a mere markup language, but more recently HTMLâ€™s put on some major muscle. Now weâ€™ve got a language tuned for building web applications with Web storage, 2D drawing, offline support, sockets and threads, and more. And to speak this language youâ€™ve got to go beyond HTML5 markup and into the world of the DOM, events, and JavaScript APIs.

Now you probably already know all about HTML markup (otherwise known as structure) and you know all aboutCSS style (presentation), but what youâ€™ve been missing is JavaScript (behavior). If all you know about are structure and presentation, you can create some great looking pages, but theyâ€™re still just pages. When you add behavior with JavaScript, you can create an interactive experience; even better, you can create full blown web applications.

Head First HTML5 Programming is your ultimate tour guide to creating web applications with HTML5 and JavaScript, and we give you everything you need to know to build them, including: how to add interactivity to your pages, how to communicate with the world of Web services, and how to use the great new APIs being developed for HTML5.

Here are just some of the things youâ€™ll learn in Head First HTML5 Programing:
Learn how to make your pages truly interactive by using the power of the DOM.
Finally understand how JavaScript works and take yourself from novice to well-informed in just a few chapters.
Learn how JavaScript APIs fit into the HTML5 ecosystem, and how to use any API in your web pages.
Use the Geolocation API to know where your users are.
Bring out your inner artist with Canvas, HTML5â€™s new 2D drawing surface.
Go beyond just plugging a video into your pages, and create custom video experiences.
Learn the secret to grabbing five megabytes of storage in every userâ€™s browser.
Improve your pageâ€™s responsiveness and performance with Web workers.
And much more.
