Appleâ€™s products have always had the reputation (richly deserved in my opinion) of providing the easiest to learn
and richest working environment of any computer system. As Mac or iPhone users we are privileged: software that
requires little time, effort, or documentation to become productive is the rule rather than the exception.
Unfortunately, that rule hasnâ€™t historically extended to the tools and technologies used to create such programs.
Learning to write software for the Mac has traditionally involved a major investment of intellectual effort and time
in new tools, technologies, and techniques. I have thought for a long time that this is an essentially artificial barrier.
Delivery in the sophisticated environment of the Mac and iPhone takes a lot of effort behind the scenes, and there
is no doubt that learning to write software that works in such environments involves taking on a significant burden
of new technologies and concepts. However, I believe that, with suitably accessible tools, and some good, clear,
written guidance, creating great Mac and iPhone software should be within the grasp of most competent
developers.
With the latest release of the Xcode Developer Tools, the new developer has access to a formidable tool-chest for
Mac and iPhone development that is easier to use than any previous version. The missing piece, to me, has always
been a simple and clear description of the tools and technologies needed to write for the Mac and iPhone. That is
why I have written this book.
I wrote this book with the idea that it would be a companion for the new developer. Itâ€™s the book that I hope you
will keep within reach as you learn to write software for the Mac and iPhone, because itâ€™s the book that I wish Iâ€™d
had. It is intended to be a friendly guide to the environment, tools, techniques, and technologies that you will need
to take on to be comfortable writing software for the Mac and iPhone. It will take you, I hope in a fairly rational way,
from the basic developer tools through to more advanced technologies such as source-code management,
performance analysis, and unit testing. Along the way you will be visiting some lesser-travelled roads to learn about
usability and accessibility. Although there is a progression from simple to advanced topics, this is also a book to dip
into where you need to, and to skip the areas you already know or donâ€™t need to know right now. It is, finally,
intended to be funâ€”using a Mac is one of lifeâ€™s great pleasures, after all, so why shouldnâ€™t it be fun to write software
on it and for it?